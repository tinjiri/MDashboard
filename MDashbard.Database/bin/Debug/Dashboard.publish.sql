/*
Deployment script for DashboardDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DashboardDb"
:setvar DefaultFilePrefix "DashboardDb"
:setvar DefaultDataPath "C:\Users\JTi\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\JTi\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[Component]...';


GO
CREATE TABLE [dbo].[Component] (
    [ComponentId]          INT            NOT NULL,
    [ComponentDescription] NVARCHAR (250) NULL,
    [ComponentCode]        NVARCHAR (50)  NULL,
    [InStock]              BIT            NULL,
    [CreatedBy]            NVARCHAR (50)  NULL,
    [PopulationDate]       DATETIME       NULL,
    [LastModifiedBy]       NVARCHAR (50)  NULL,
    [ModificationDate]     DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([ComponentId] ASC)
);


GO
PRINT N'Creating [dbo].[Department]...';


GO
CREATE TABLE [dbo].[Department] (
    [DepartmentId]          INT            NOT NULL,
    [DepartmentName]        NVARCHAR (100) NULL,
    [DepartmentDescription] NVARCHAR (100) NULL,
    [DepartmentCode]        NVARCHAR (20)  NULL,
    [LocationId]            INT            NULL,
    [CreatedBy]             NVARCHAR (50)  NULL,
    [PopulationDate]        DATETIME       NULL,
    [LastModifiedBy]        NVARCHAR (50)  NULL,
    [ModificationDate]      DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([DepartmentId] ASC)
);


GO
PRINT N'Creating [dbo].[DepartmentManager]...';


GO
CREATE TABLE [dbo].[DepartmentManager] (
    [DepartmentManagerId] INT           NOT NULL,
    [DepartmentId]        INT           NULL,
    [EmployeeId]          INT           NULL,
    [DesignationLevelId]  INT           NULL,
    [CreatedBy]           NVARCHAR (50) NULL,
    [PopulationDate]      DATETIME      NULL,
    [LastModifiedBy]      NVARCHAR (50) NULL,
    [ModificationDate]    DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([DepartmentManagerId] ASC)
);


GO
PRINT N'Creating [dbo].[Designation]...';


GO
CREATE TABLE [dbo].[Designation] (
    [DesignationId]          INT            NOT NULL,
    [DesignationDescription] NVARCHAR (100) NULL,
    [DesignationCode]        NVARCHAR (100) NULL,
    [DesignationLevelId]     INT            NULL,
    [CreatedBy]              NVARCHAR (50)  NULL,
    [PopulationDate]         DATETIME       NULL,
    [LastModifiedBy]         NVARCHAR (50)  NULL,
    [ModificationDate]       DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([DesignationId] ASC)
);


GO
PRINT N'Creating [dbo].[DesignationLevel]...';


GO
CREATE TABLE [dbo].[DesignationLevel] (
    [DesignationLevelId]          INT            NOT NULL,
    [DesignationLevelDescription] NVARCHAR (100) NULL,
    [DesignationLevelCode]        NVARCHAR (100) NULL,
    [DesignationLevelName]        INT            NULL,
    [CreatedBy]                   NVARCHAR (50)  NULL,
    [PopulationDate]              DATETIME       NULL,
    [LastModifiedBy]              NVARCHAR (50)  NULL,
    [ModificationDate]            DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([DesignationLevelId] ASC)
);


GO
PRINT N'Creating [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [EmpId]              INT           NOT NULL,
    [Name]               NVARCHAR (50) NULL,
    [Surname]            NVARCHAR (50) NULL,
    [KnownAs]            NVARCHAR (50) NULL,
    [TitleId]            INT           NULL,
    [DateOfBirth]        DATETIME      NULL,
    [DateOfEngagement]   DATETIME      NULL,
    [DesignationId]      INT           NULL,
    [DesignationLevelId] INT           NULL,
    [ReportsTo]          INT           NULL,
    [EmploymentStatusId] INT           NULL,
    [DeptId]             INT           NULL,
    [EmpStatusId]        NCHAR (10)    NULL,
    [CreatedBy]          NVARCHAR (50) NULL,
    [PopulationDate]     DATETIME      NULL,
    [LastModifiedBy]     NVARCHAR (50) NULL,
    [ModificationDate]   DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([EmpId] ASC)
);


GO
PRINT N'Creating [dbo].[EmployeeStatus]...';


GO
CREATE TABLE [dbo].[EmployeeStatus] (
    [EmployeeStatusId]          INT            NOT NULL,
    [EmployeeStatusDescription] NVARCHAR (100) NULL,
    [EmployeeStatusCode]        NVARCHAR (50)  NULL,
    [CreatedBy]                 NVARCHAR (50)  NULL,
    [PopulationDate]            DATETIME       NULL,
    [LastModifiedBy]            NVARCHAR (50)  NULL,
    [ModificationDate]          DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([EmployeeStatusId] ASC)
);


GO
PRINT N'Creating [dbo].[EmploymentStatus]...';


GO
CREATE TABLE [dbo].[EmploymentStatus] (
    [EmploymentStatusId]          INT            NOT NULL,
    [EmploymentStatusDescription] NVARCHAR (100) NULL,
    [EmploymentStatusCode]        NVARCHAR (50)  NULL,
    [CreatedBy]                   NVARCHAR (50)  NULL,
    [PopulationDate]              DATETIME       NULL,
    [LastModifiedBy]              NVARCHAR (50)  NULL,
    [ModificationDate]            DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([EmploymentStatusId] ASC)
);


GO
PRINT N'Creating [dbo].[Job]...';


GO
CREATE TABLE [dbo].[Job] (
    [JobId]                      INT            NOT NULL,
    [JobNumber]                  NVARCHAR (100) NULL,
    [JobName]                    NVARCHAR (100) NULL,
    [JobTypeId]                  INT            NULL,
    [JobDescription]             NVARCHAR (100) NULL,
    [JobCode]                    NVARCHAR (50)  NULL,
    [Scope]                      NVARCHAR (100) NULL,
    [JobDateIssued]              DATETIME       NULL,
    [JobStartDate]               DATETIME       NULL,
    [JobEndDate]                 DATETIME       NULL,
    [JobEstimateDueDate]         DATETIME       NULL,
    [JobEstimateDurationInHours] INT            NULL,
    [DurationInHours]            INT            NULL,
    [DurationInDays]             INT            NULL,
    [JobRequestorId]             INT            NULL,
    [PriorityId]                 INT            NULL,
    [Invoiced]                   BIT            NULL,
    [CreatedBy]                  NVARCHAR (50)  NULL,
    [PopulationDate]             DATETIME       NULL,
    [LastModifiedBy]             NVARCHAR (50)  NULL,
    [ModificationDate]           DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([JobId] ASC)
);


GO
PRINT N'Creating [dbo].[JobStatus]...';


GO
CREATE TABLE [dbo].[JobStatus] (
    [JobStatusId]          INT            NOT NULL,
    [JobStatusDescription] NVARCHAR (100) NULL,
    [JobStatusCode]        NVARCHAR (50)  NULL,
    [CreatedBy]            NVARCHAR (50)  NULL,
    [PopulationDate]       DATETIME       NULL,
    [LastModifiedBy]       NVARCHAR (50)  NULL,
    [ModificationDate]     DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([JobStatusId] ASC)
);


GO
PRINT N'Creating [dbo].[Location]...';


GO
CREATE TABLE [dbo].[Location] (
    [LocationId]                               INT            NOT NULL,
    [LocationName]                             NVARCHAR (100) NULL,
    [LocationDescription]                      NVARCHAR (100) NULL,
    [LocationCode]                             NVARCHAR (20)  NULL,
    [City]                                     NVARCHAR (50)  NULL,
    [Province]                                 NVARCHAR (50)  NULL,
    [PostalCode NVARCHAR(50) NULL,
	[ZipCode] NVARCHAR (20)  NULL,
    [CreatedBy]                                NVARCHAR (50)  NULL,
    [PopulationDate]                           DATETIME       NULL,
    [LastModifiedBy]                           NVARCHAR (50)  NULL,
    [ModificationDate]                         DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([LocationId] ASC)
);


GO
PRINT N'Creating [dbo].[Title]...';


GO
CREATE TABLE [dbo].[Title] (
    [TitleId]           INT            NOT NULL,
    [TitleName]         NVARCHAR (100) NULL,
    [TitleDescription]  NVARCHAR (100) NULL,
    [TitleCode]         NVARCHAR (20)  NULL,
    [TitleAbbreviation] NVARCHAR (20)  NULL,
    [CreatedBy]         NVARCHAR (50)  NULL,
    [PopulationDate]    DATETIME       NULL,
    [LastModifiedBy]    NVARCHAR (50)  NULL,
    [ModificationDate]  DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([TitleId] ASC)
);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/




MERGE [Title] WITH (SERIALIZABLE) AS T
USING (VALUES 
(1,'Mister','Mister', 'MR', 'Mr'),
(2,'Professor','Professor', 'Prof', 'Prof'),
(3,'Mrs','Mistress', 'MRS', 'Mrs')
) 	AS U ([TitleId],	[TitleName] ,	[TitleDescription] ,	[TitleCode] ,	[TitleAbbreviation] )
	ON U.[TitleId]=T.[TitleId]	

WHEN MATCHED THEN 
    UPDATE SET T.[TitleName] = U.[TitleName],
	 T.[TitleDescription] = U.[TitleDescription],
     	 T.[TitleCode] = U.[TitleCode],
         	 T.[TitleAbbreviation] = U.[TitleAbbreviation]
WHEN NOT MATCHED THEN
    INSERT ([TitleId], [TitleName] ,[TitleDescription], [TitleCode], [TitleAbbreviation]) 
    VALUES (U.[TitleId],U.[TitleName] ,U.[TitleDescription] , U.[TitleCode], U.[TitleAbbreviation]);






GO


GO

GO
PRINT N'Update complete.';


GO
