/*
Deployment script for DashboardDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DashboardDb"
:setvar DefaultFilePrefix "DashboardDb"
:setvar DefaultDataPath "C:\Users\JTi\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\JTi\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/




MERGE [Title] WITH (SERIALIZABLE) AS T
USING (VALUES 
(1,'Mister','Mister', 'MR', 'Mr'),
(2,'Professor','Professor', 'Prof', 'Prof'),
(3,'Mrs','Mistress', 'MRS', 'Mrs'),
(4,'Engineer','Engineer', 'ENG', 'Eng'),
(5,'Mistress','Mistress', 'MS', 'Ms'),
(6,'Mistress','Mistress', 'MS', 'Miss'),
(7,'Doctor','Doctor', 'DOCTOR', 'Dr')
) 	AS U ([TitleId],	[TitleName] ,	[TitleDescription] ,	[TitleCode] ,	[TitleAbbreviation] )
	ON U.[TitleId]=T.[TitleId]	

WHEN MATCHED THEN 
    UPDATE SET T.[TitleName] = U.[TitleName],
	 T.[TitleDescription] = U.[TitleDescription],
     	 T.[TitleCode] = U.[TitleCode],
         	 T.[TitleAbbreviation] = U.[TitleAbbreviation]
WHEN NOT MATCHED THEN
    INSERT ([TitleId], [TitleName] ,[TitleDescription], [TitleCode], [TitleAbbreviation]) 
    VALUES (U.[TitleId],U.[TitleName] ,U.[TitleDescription] , U.[TitleCode], U.[TitleAbbreviation]);






GO


GO

GO
PRINT N'Update complete.';


GO
